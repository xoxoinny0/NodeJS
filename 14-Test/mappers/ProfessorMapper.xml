<!--
 @FileName: ProfessorMapper.xml
 @Author: 유지인
 @Description: 교수 테이블에 대한 Restful API 구축을 위한 Mapper
 / -->
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProfessorMapper">

    <!-- 단일행 조회를 위한 기능 정의 -->
    <select id="selectItem">
        SELECT
            profno, name, userid, position, sal,
            date_format(hiredate, '%Y-%m-%d') as h_date,
            comm, p.deptno, dname
        FROM professor as p
        INNER JOIN department as d
        ON p.deptno = d.deptno 
        WHERE profno=#{profno};

    </select>

    <!-- 다중행 조회를 위한 기능 정의 -->
    <select id="selectList">
        SELECT
            profno, name, userid, position, sal,
            date_format(hiredate, '%Y-%m-%d') as h_date,
            comm, p.deptno, dname
        FROM professor as p
        INNER JOIN department as d
        ON p.deptno = d.deptno

        <where>
            <if test="name != null and name != ''">
                name LIKE concat('%', #{name}, '%')
            </if>

            <if test="userid != null and userid != ''">
                OR userid LIKE concat('%', #{userid}, '%')
            </if>

            <if test="position != null and position != ''">
                OR position LIKE concat('%', #{position}, '%')
            </if>

            <if test="sal != null and sal != ''">
                OR sal LIKE concat('%', #{sal}, '%')
            </if>

            <if test="hiredate != null and hiredate != ''">
                OR hiredate LIKE concat('%', #{hiredate}, '%')
            </if>

            <if test="comm != null and comm != ''">
                OR comm LIKE concat('%', #{comm}, '%')
            </if>

            <if test="p.deptno != null and p.deptno != ''">
                OR p.deptno LIKE concat('%', #{p.deptno}, '%')
            </if>

        </where>

        ORDER BY profno DESC

    <!-- 페이지 구현을 위한 LIMIT절 추가 -->
        <if test="listCount > 0">
            LIMIT ${offset}, ${listCount}
        </if>
    </select>

    <!-- 데이터 저장을 위한 기능 정의 -->
    <insert id="insertItem">
        INSERT INTO professor (name, userid, position, sal, hiredate, comm, deptno) VALUES (#{name}, #{userid}, #{position}, #{sal}, #{hiredate}, #{comm}, #{deptno});
    </insert>

    <!-- 데이터 삭제를 위한 기능 정의-->
    <delete id="deleteItem">
        DELETE FROM professor WHERE profno=#{profno}
    </delete>

    <!-- 데이터 갱신을 위한 기능 정의-->
    <update id="updateItem">
        UPDATE professor SET name=#{name}, userid=#{userid}, position=#{position}, sal=#{sal}, hiredate=#{hiredate}, comm=#{comm}, deptno=#{deptno}
        WHERE profno=#{profno};
    </update>

    <!-- 데이터 수 조회하기 -->
    <select id="selectCountAll">
        SELECT COUNT(*) AS cnt FROM professor

        <where>
            <if test="name != null and name != ''">
                name LIKE concat('%', #{name}, '%')
            </if>

            <if test="userid != null and userid != ''">
                OR userid LIKE concat('%', #{userid}, '%')
            </if>

            <if test="position != null and position != ''">
                OR position LIKE concat('%', #{position}, '%')
            </if>

            <if test="sal != null and sal != ''">
                OR sal LIKE concat('%', #{sal}, '%')
            </if>

            <if test="hiredate != null and hiredate != ''">
                OR hiredate LIKE concat('%', #{hiredate}, '%')
            </if>

            <if test="comm != null and comm != ''">
                OR comm LIKE concat('%', #{comm}, '%')
            </if>

            <if test="deptno != null and deptno != ''">
                OR deptno LIKE concat('%', #{deptno}, '%')
            </if>

        </where>
    </select>

    <!-- 특정 학과에 속한 교수 일괄 삭제 -->
    <delete id="deleteItemByDeptno">
        DELETE FROM professor WHERE deptno=#{deptno};
    </delete>

</mapper>
